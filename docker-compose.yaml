version: '3.9'
services:
  postgres:
    image: postgres:15
    env_file:
      - .env
    expose:
      - 5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 10s
      retries: 5
      start_period: 15s
    volumes:
      - ./database:/var/lib/postgresql/data

  redis:
    image: redis:7.2.3
    expose:
      - 6379
    healthcheck:
      test: [ "CMD", "redis-cli","ping" ]
      interval: 5s
      timeout: 10s
      retries: 5
      start_period: 15s

  online-store:
    build: ./backend
    env_file:
      - .env
    volumes:
      - ./backend/static:/opt/baskets/static:rw
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    expose:
      - 8000

  celery:
    build:
        context: ./backend
        dockerfile: Dockerfile-celery
    volumes:
        - ./backend/static:/opt/baskets/static:rw
    env_file:
      - .env
    depends_on:
      redis:
        condition: service_healthy
      postgres:
        condition: service_healthy

  frontend:
    build: ./frontend
    ports:
      - "3000:3000"
    env_file:
      - .env
    depends_on:
      - online-store

  nginx:
      image: nginx:1.19.2
      volumes:
        - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
        - ./nginx/config:/etc/nginx/conf.d:ro
        - ./backend/static:/data/static:ro
      depends_on:
        - online-store
      ports:
        - "80:80"

volumes:
  database:
